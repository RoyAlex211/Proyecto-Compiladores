package AnalisisSintaxico;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Compilador4 {
    public static void main(String[] args) {
        int finalEstado = 48;

        try (BufferedReader br = new BufferedReader(
                new FileReader("C:\\Users\\Ruy\\Downloads\\Escuela\\6to Semestre\\Compiladores\\CURP.txt"))) {
            String linea;

            while ((linea = br.readLine()) != null) {
                System.out.println("\nLeyendo transición: " + linea);
                int estado = 0;
                boolean esValida = true;

                for (char c : linea.toCharArray()) {
                    int nuevo = transformar(c);
                    if (nuevo == -1) {
                        System.out.println("❌ ERROR: Caracter no correcto -> '" + c + "'");
                        esValida = false;
                        break;
                    }

                    int estadoAnterior = estado;
                    estado = evaluar(estado, nuevo);

                    if (estado == -1) {
                        System.out.println(
                                "❌ ERROR: Transición no válida en estado " + estadoAnterior + " con entrada " + c);
                        esValida = false;
                        break;
                    }

                    System.out.println(
                            "✔ Transición: Estado " + estadoAnterior + " -> Estado " + estado + " con entrada " + c);
                }

                if (esValida && estado == finalEstado) {
                    System.out.println("✅ Resultado: Correcto");
                } else {
                    System.out.println("❌ Resultado: No correcto");
                }
            }

        } catch (IOException e) {
            System.err.println("Error al leer el archivo: " + e.getMessage());
        }
    }

    public static int transformar(char c) {
        switch (c) {
            case '0':
                return 0;
            case '1':
                return 1;
            case '2':
                return 2;
            case '3':
                return 3;
            case '4':
                return 4;
            case '5':
                return 5;
            case '6':
                return 6;
            case '7':
                return 7;
            case '8':
                return 8;
            case '9':
                return 9;
            case 'A':
                return 10;
            case 'B':
                return 11;
            case 'C':
                return 12;
            case 'D':
                return 13;
            case 'E':
                return 14;
            case 'F':
                return 15;
            case 'G':
                return 16;
            case 'H':
                return 17;
            case 'I':
                return 18;
            case 'J':
                return 19;
            case 'K':
                return 20;
            case 'L':
                return 21;
            case 'M':
                return 22;
            case 'N':
                return 23;
            case 'Ñ':
                return 24;
            case 'O':
                return 25;
            case 'P':
                return 26;
            case 'Q':
                return 27;
            case 'R':
                return 28;
            case 'S':
                return 29;
            case 'T':
                return 30;
            case 'U':
                return 31;
            case 'V':
                return 32;
            case 'W':
                return 33;
            case 'X':
                return 34;
            case 'Y':
                return 35;
            case 'Z':
                return 36;
            default:
                return -1;
        }
    }

    public static int evaluar(int estado, int nuevo) {
        int[][] TL = {
            //0//1//2//3//4//5//6//7//8//9//A//B//C//D//E//F//G//H//I//J//K//L//M//N//Ñ//O//P//Q//R//S//T//U//V//W//X//Y//Z//
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // q0
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, // q1
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3}, // q2
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4}, // q3
            { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q4
            { 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q5
            { 7, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q6
            {-1, 9,12, 9,15, 9,15, 9, 9,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q7
            { 9,15, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q8
            {13,17,17,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q9
            {-1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q10
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,-1,-1,-1,-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q11
            {13,13,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q12
            {-1,14,14,14,14,14,14,14,14,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q13
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,-1,-1,-1,-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q14
            {13,17,17,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q15
            {18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q16
            {18,18,18,18,18,18,18,18,18,18,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q17
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,-1,-1,-1,-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q18
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20,22,24,26,-1,-1,28,30,-1,32,-1,-1,34,36,-1,38,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q19
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1}, // q20
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q21
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,23,-1,-1,-1,-1,-1,-1,-1}, // q22
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q23
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,-1,-1,-1,-1,25,-1,-1,-1,25,25,-1,-1,-1,-1,-1,-1,25,-1,-1,-1,-1,-1,-1,-1}, // q24
            //0//1//2//3//4//5//6//7//8//9//A//B//C//D//E//F//G//H//I//J//K//L//M//N//Ñ//O//P//Q//R//S//T//U//V//W//X//Y//Z//
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q25
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,27,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q26
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q27
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,29,-1,29,-1,-1,-1,-1,-1,-1}, // q28
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q29
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q30
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q31
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q32
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q33
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1}, // q34
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q35
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,37,-1,-1,-1,-1,-1,-1,-1,-1,37,-1,-1,-1,-1,-1,-1}, // q36
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q37
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q38
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q39
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q40
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q41
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q42
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,44,44,-1,44,44,44,-1,44,44,44,44,44,44,-1,44,44,44,44,44,-1,44,44,44,44,44}, // q43
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,45,45,45,-1,45,45,45,-1,45,45,45,45,45,45,-1,45,45,45,45,45,-1,45,45,45,45,45}, // q44
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,46,46,46,-1,46,46,46,-1,46,46,46,46,46,46,-1,46,46,46,46,46,-1,46,46,46,46,46}, // q45
            {47,47,47,47,47,47,47,47,47,47,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, // q46
            {48,48,48,48,48,48,48,48,48,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}  // q47
                };
        if (estado < 0 || estado >= TL.length || nuevo < 0 || nuevo >= TL[0].length) {
    return -1;
}

int nuevoEstado = TL[estado][nuevo];
//System.out.println("Estado actual: q" + estado + " -> Símbolo: " + nuevo + " -> Nuevo estado: q" + nuevoEstado);
return nuevoEstado;
}
}
   
